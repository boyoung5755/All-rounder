package kr.or.ddit.pms.job.service;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.ddit.common.enumpkg.ServiceResult;
import kr.or.ddit.pms.job.dao.JobDAO;
import kr.or.ddit.pms.job.dao.JobFileDAO;
import kr.or.ddit.vo.PaginationInfo;
import kr.or.ddit.vo.groupware.EmployeeVO;
import kr.or.ddit.vo.pms.ChargerVO;
import kr.or.ddit.vo.pms.PAtchVO;
import kr.or.ddit.vo.pms.PjobVO;
import kr.or.ddit.vo.pms.PmemberVO;
import lombok.RequiredArgsConstructor;

/**
 * @author 작성자명
 * @since 2023. 11. 10.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet 
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일       	수정자         수정내용
 * --------     	--------    ----------------------
 * 2023. 11. 10.    김보영         최초작성
 * 2023. 11. 11.    김보영         일감차트,참여자
 * 2023. 11. 13.    김보영         일감담당자,일감목록
 * 2023. 11. 16.    김보영         일감등록, 삭제, 수정
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */

@Service
@RequiredArgsConstructor
public class jobServiceImpl implements JobService{
	
	private final JobDAO dao;
	
	private final JobFileDAO fDao;
	
	
	@Value("#{appInfo.jobFiles}")
	private Resource jobFiles;

	
	
	@Override
	public PjobVO retrieveJobCount(PjobVO pVO) {
		return dao.jobCount(pVO);
	}


	@Override
	public List<PmemberVO> retrieveProMember(PmemberVO pMVO) {
		return dao.proMemList(pMVO);
	}


	@Override
	public List<ChargerVO> retrieveCharger(int jobSn) {
		return dao.chargerList(jobSn);
	}


	@Override
	public List<PjobVO> retrieveJobList(PaginationInfo<PjobVO> paging) {
		
		String proSn = paging.getDetailCondition().getProSn();
		int totalRecord = dao.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		List<PjobVO> dataList = dao.selectPjobList(paging);
		paging.setDataList(dataList);
		
		return dataList;
	}


	@Override
	public EmployeeVO retrieveWriter(String empCd) {
		return dao.selectWriter(empCd);
	}
	
//	@Transactional
	@Override
	public ServiceResult createJob(PjobVO jVO) {
		
		//날짜 변환
		String bData = jVO.getJobBdate();
		bData = bData.replace(String.valueOf("-"),"");
		jVO.setJobBdate(bData);
		
		String eData = jVO.getJobEdate();
		eData = eData.replace(String.valueOf("-"),"");
		jVO.setJobEdate(eData);
		
		//일감의 파일등록
		try {
//			processBoFiles(jVO);
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		int rowcnt = dao.insertJob(jVO);
		
		for(ChargerVO cVO : jVO.getChargerList()) {
			cVO.setJobSn(jVO.getJobSn());
			cVO.setProSn(jVO.getProSn());
			dao.insertCharger(cVO);
		}
		
		ServiceResult result = null;
		
		if(rowcnt >=1){
			result = ServiceResult.OK;
		}else {
			result = ServiceResult.FAIL;
		}
		return result;
		
	}
	
	private void processBoFiles(PjobVO jVO) {
		List<PAtchVO> fileList = jVO.getJobFileList();
		if(fileList!=null) {
			fileList.forEach((atch)->{
				try {
					atch.setProFileCode(jVO.getProFileCd());
					fDao.insertJobFile(atch);
					atch.saveTo(jobFiles.getFile());
					if(1==1) {
						throw new IOException("강제 발생 예외");
					}
				}catch (IOException e) {
					throw new RuntimeException(e);
				}
			});
		}
	}


	@Override
	public void createCharger(ChargerVO cVO) {
		//일감에 대한 담당자 등록
		dao.insertCharger(cVO);
	}


	@Override
	public int getJobSn() {
		return dao.selectJobSn();
	}


	
	@Transactional
	@Override
	public void removeJob(PjobVO jVO) {
		dao.deleteJob(jVO);
		removeCharger(getJobSn());
	}

	public void removeCharger(int jobSn) {
		dao.deleteCharger(jobSn);
	}


	@Override
	public void modifyJob(PjobVO jVO) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void modifyCharger(ChargerVO cVO) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public List<PjobVO> retrieveMyJob(ChargerVO cVO) {
		return dao.myJobList(cVO);
	}


	@Override
	public PjobVO retrieveJobDetail(int jobSn) {
		return dao.jobDetail(jobSn);
		
	}


	@Override
	public List<PjobVO> retrieveUJobList(String proSn) {
		return dao.UJobList(proSn);
	}


	
	
	
	
	

}
