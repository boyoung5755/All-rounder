package kr.or.ddit.groupware.reservation.vehicle.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.groupware.reservation.vehicle.service.VehicleService;
import kr.or.ddit.vo.groupware.VehicleVO;
import lombok.extern.slf4j.Slf4j;

/**
 * @author 작성자명
 * @since 2023. 11. 7.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet 
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2023. 11. 7.      박민주       최초작성
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/vehicle")
@Slf4j
public class VehicleController {
	
	/*
	/vehicle (get) : 전체 차량 조회
	/vehicle/V001 (get) : V001 차량정보조회
	/vehicle (post) : 신규차량등록
	/vehicle/V001 (put) : V001 차량정보 수정
	/vehicle/V001 (delete) : V001 차량 삭제 		 
	 */
	
	@Inject
	private VehicleService service;
	
	// 관리자 차량관리 페이지로 이동
	@GetMapping("/admin/home")
	public String adminHome() {
		return  "reservation/adminVehicleHome"; 
	}
	
	// 전체 차량 내역 조회
	@GetMapping("/admin")
	@ResponseBody
	public List<VehicleVO> doGet(Model model) {
		List<VehicleVO> vehicleList =  service.retrieveVehiclelist();
		return vehicleList; 
	}
	
	// 차량 상세 조회
	@GetMapping("{vhcleCd}")
	@ResponseBody
	public VehicleVO doGetOne(@PathVariable("vhcleCd") String vhcleCd) {
		List<VehicleVO> vehicleList = service.retrieveVehiclelist();
		VehicleVO vehicleVO = null;
		for(VehicleVO vehicle : vehicleList) {
			String vehicleCdData = vehicle.getVhcleCd();
			if(vehicleCdData.equals(vhcleCd)) {
				vehicleVO = vehicle;
			}
		}
		return vehicleVO;
	}
	
	// 신규 차량 등록
	@PostMapping("/admin")
	public String doPost(VehicleVO vehicle) {
		service.createVehicle(vehicle);
		return null;
	}
	
	// 차량 상세정보 수정
	@PutMapping("/admin")
	public String doPut(VehicleVO vehicle) {
		service.modifyVehicle(vehicle);
		return null;
	}
	
	// 차량 삭제
	@DeleteMapping("/admin")
	public String doDelete(String vhcleCd) {
		service.removeVehicle(vhcleCd);
		return null;
	}
}
