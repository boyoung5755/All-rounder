<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
  <script src="/resources/js/app/qrcode/jsQR.js"></script> 
  
<%--
* [[개정이력(Modification Information)]]
* 수정일                 수정자      수정내용
* ----------  ---------  -----------------
* ${date}      작성자명      최초작성
	2023-11-16	권도윤	근태 수정
	2023-11-22	김보영	내일감연결
	2023-11-28	송석원 qr코드 인식및데이터 전송 
* Copyright (c) ${year} by DDIT All right reserved
 --%>
 <style>
 
 .modal-content {
    width: auto;
}
  
/*   #loadingMessage, */
/*   #canvas, */
/*   #output { */
/*     display: none; */
/*   } */
   
/*     .qrbody {  */
/*       font-family: 'Ropa Sans', sans-serif; */
/*       color: #333; */
/*       max-width: 40px; */
/*       margin: 0 auto; */
/*       position: relative; */
/*     } */

    #githubLink {
      position: absolute;
      right: 0;
      top: 12px;
      color: #2D99FF;
    }

    h1 {
      margin: 10px 0;
      font-size: 40px;
    }

    #loadingMessage {
      text-align: center;
      background-color: #eee;
    }
 
    #canvas {
      width: 340px;
    }

    #output {
      margin-top: 20px;
      background: #eee;
      padding: 10px;
      padding-bottom: 0;
    }

    #output div {
      padding-bottom: 10px;
      word-wrap: break-word;
    }

    #noQRFound {
      text-align: center;
    }
  </style>
  

<!-- Layout wrapper -->
<security:csrfInput/>
<div class="layout-wrapper layout-content-navbar">
	<div class="layout-container">
		<!-- Layout container -->
		<div class="layout-page">

			<!-- Content wrapper -->
			<div>
				<!-- Content -->
				<h3 class="pb-1 mb-4 text-muted">${emp}님안녕하세요</h3>

				<div class="row mb-5">
					<div class="col-md-6 col-lg-4">
						<h6 class="mt-2 text-muted">날씨</h6>
						<div class="card mb-4">
							<div class="card-body" id="weather">
								<!--이부분에서 작업-->

							</div>
						</div>
						<h6 class="mt-2 text-muted">프로필</h6>
						<div class="card mb-4">
							<div class="card-body">
								<!--이부분에서 작업-->
							</div>
						</div>
						<h6 class="mt-2 text-muted">근태</h6>
						<div class="card mb-4" style="text-align: center;">
							<div class="card-body">
<!-- 								<button class="btn btn-label-primary" onclick="commute()" id="commute" style="width:70%; height: 50px;"> -->
<!-- 									<span class="tf-icons bx bx-pie-chart-alt me-1"></span> -->
<!-- 								</button> --> 
								 <button class="btn btn-label-primary" onclick="commute()" id="commute"  data-bs-toggle="modal" data-bs-target="#modalCenter" style="width:70%; height: 50px;">
								 	<span class="tf-icons bx bx-pie-chart-alt me-1"></span> 
                         		</button>
                       
							</div>
						</div>
					</div>
					<div class="col-md-6 col-lg-4">
						<h6 class="mt-2 text-muted">근태현황</h6>
						<div class="card mb-4">
							<div class="card-body" style="justify-content: center;">
								<!--이부분에서 작업-->
								<div class="progress">
                      				<div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" id="progressbar">
                      				</div>
                    			</div>								
								<div class="text-muted d-block" style="text-align: center;">
									<small style="margin: 0 7%; font-size: 15px;">월</small>'
									<small style="margin: 0 7%; font-size: 15px;">화</small>'
									<small style="margin: 0 7%; font-size: 15px;">수</small>'
									<small style="margin: 0 7%; font-size: 15px;">목</small>'
									<small style="margin: 0 7%; font-size: 15px;">금</small>
								</div>
								<div class="text-muted d-block" id="annualList">
								</div>
								<!--/이부분에서 작업-->
							</div>
						</div>
						<h6 class="mt-2 text-muted">내결재</h6>
						<div class="card mb-4">
							<div class="card-body">
								<!--이부분에서 작업-->
							</div>
						</div>
					</div>
					<div class="col-md-6 col-lg-4">
						<h6 class="mt-2 text-muted">공지사항</h6>
						<div class="card mb-4">
							<div class="card-body">
								<!--이부분에서 작업-->
							</div>
						</div>
						<h6 class="mt-2 text-muted">내 일감</h6>
						<div class="card mb-4">
							 <a class="nav-link dropdown-toggle" href="javascript:void(0);" data-bs-toggle="dropdown"
			                    aria-expanded="false" data-trigger="hover">
			                    <i class='bx bxs-copy-alt'></i>
			                    　프로젝트</a>
			                  <div class="dropdown-menu">
			                    <c:forEach items="${proj}" var="proj">
			                      <c:if test="${proj.proSttus == 1}">
			                        <a  class="dropdown-item myproject" onclick="myjobGrid()" data-set-prosn="${proj.proSn}">${proj.proNm}</a>
			                      </c:if>
			                    </c:forEach>
			                  </div>
							<div class="card-body ag-theme-balham" id="myjobList" style="height:465px">
								<!--이부분에서 작업-->
							</div>
						</div>
						<h6 class="mt-2 text-muted">오늘의 연차자</h6>
						<div class="card mb-4">
							<div class="card-body">
								<!--이부분에서 작업-->
							</div>
						</div>
					</div>
				</div>


				<!-- /Content -->
			</div>
			<!-- /Content wrapper -->
		</div>
		<!-- /Layout container -->
	</div>
	<!-- /Layout wrapper -->
</div>

 
 
<div class="col-lg-4 col-md-6">
                      <small class="text-light fw-medium">Vertically centered</small>
                      <div class="mt-3">
                        <!-- Button trigger modal -->
                       

                        <!-- Modal -->
                        <div class="modal fade" id="modalCenter" tabindex="-1" style="display: none;" aria-hidden="true">
                          <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                              <div class="modal-body">
                               <div id="loadingMessage" class="qrbody card mb-4">🎥 
										비디오 스트림에 액세스할 수 없습니다(웹캠이 활성화되어 있는지 확인하십시오).</div>  
								  <canvas id="canvas" hidden></canvas> 
								  <div id="output" hidden>
								    <div id="outputMessage">No QR code detected.</div>
								    <div hidden><b>Data:</b> <span id="outputData"></span></div>
								  </div>
 
 
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>


<script src="/resources/js/app/weather/weather.js"></script>
<script src="/resources/js/app/attebdabce/attendance.js"></script>
<script>var __basePath = './';</script>
<script src="https://cdn.jsdelivr.net/npm/ag-grid-community@30.2.1/dist/ag-grid-community.min.js"></script>


<script>


function myjobGrid(){
	
}

/* 내일감 AG-GRID */
const gridOptionsMy = {
  // define grid columns
  columnDefs: [
    { field: 'jobSn', headerName: '일감번호', hide: "true" },
    { field: 'proSn', headerName: '프로젝트번호', hide: "true" },
    { field: 'jobSj', headerName: '일감명' },
    { field: 'jobEdate', headerName: '마감일' },
    { field: 'jobPriort', headerName: '우선순위' 
  	  , cellRenderer: function (row) {
  		  if (row.data.jobPriort == "1") {
					return "<span class='text-danger'>긴급</span>";
				}else if(row.data.jobPriort == "2"){
					return "<span class='text-warning'>높음</span>";
				}else if(row.data.jobPriort == "3"){
					return "<span class='text-primary'>중간</span>";
				}else if(row.data.jobPriort == "4"){
					return "<span class='text-success'>낮음</span>";
				}
  	  }
    },
    { 
  	  field: 'jobStcd', headerName: '상태'
			, cellRenderer: function (row) {
				if (row.data.jobStcd == "1") {
					return "<span class='badge bg-label-success me-1'>요청</span>";
				}else if(row.data.jobStcd == "2"){
					return "<span class='badge bg-label-primary me-1'>진행</span>";
				}else if(row.data.jobStcd == "3"){
					return "<span class='badge bg-label-danger me-1'>피드백</span>";
				}else if(row.data.jobStcd == "4"){
					return "<span class='badge bg-label-warning me-1'>보류</span>";
				}else if(row.data.jobStcd == "5"){
					return "<span class='badge bg-label-info me-1'>완료</span>";
				}else{
					return "<span class='badge bg-label-secondary me-1'>상위</span>";
				}
				
			}  
    },
  ],
  rowHeight: 46,
  defaultColDef: {
    sortable: true,
    resizable: true,
    filter: true,
    width: 120,
  },
  pagination: true,
  paginationAutoPageSize: false,
  paginationPageSize: 7,
  onRowClicked: function (event) {
		console.log(event);
		location.href = "/job/"+event.data.proSn+"/"+event.data.jobSn+"/detail"
	}
};

document.addEventListener('DOMContentLoaded', function () {
  var gridDivMy = document.querySelector("#myjobList");
  new agGrid.Grid(gridDivMy, gridOptionsMy);
  
  let proSn = $('.myproject').data('setProsn');

  const httpRequestMy = new XMLHttpRequest();
  httpRequestMy.open('GET', '/job/'+proSn+'/myjob');
  httpRequestMy.send();

  httpRequestMy.onreadystatechange = function () {
    if (httpRequestMy.readyState === 4 && httpRequestMy.status === 200) {
      httpResultMy = JSON.parse(httpRequestMy.responseText);

      var json = [];
      for (var i = 0; i < httpResultMy.myjob.length; i++) {
        var obj = new Object();
        obj.jobSn = httpResultMy.myjob[i].jobSn;
        obj.proSn = httpResultMy.myjob[i].proSn;
        obj.jobSj = httpResultMy.myjob[i].jobSj;
        obj.jobSj = httpResultMy.myjob[i].jobSj;
        obj.jobEdate = httpResultMy.myjob[i].jobEdate;
        obj.jobPriort = httpResultMy.myjob[i].jobPriort;
        obj.jobStcd = httpResultMy.myjob[i].jobStcd;
        json.push(obj);
      }

      gridOptionsMy.api.setRowData(json);
    }
  };
});
 




// qr코드 시작 
  function commute() { 
 
	

var video = document.createElement("video");
var canvasElement = document.getElementById("canvas");
var canvas = canvasElement.getContext("2d");
var loadingMessage = document.getElementById("loadingMessage");
var outputContainer = document.getElementById("output");
var outputMessage = document.getElementById("outputMessage");
var outputData = document.getElementById("outputData");

// QR 코드로부터 읽은 데이터를 저장할 변수
var qrCodeData = ""; // 데이터를 저장할 변수 선언

//qrCodeData 값 업데이트
function updateQRCodeData(data) {
  qrCodeData = data;
}

  function drawLine(begin, end, color) {
    canvas.beginPath();
    canvas.moveTo(begin.x, begin.y);
    canvas.lineTo(end.x, end.y);
    canvas.lineWidth = 4;
    canvas.strokeStyle = color;
    canvas.stroke();
    
 
  }
 
  

  // Use facingMode: environment to attemt to get the front camera on phones
  navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
    video.srcObject = stream;
    video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
    video.play();
    requestAnimationFrame(tick);
//     qrCodeData = code ? code.data : ""; // 코드에서 데이터를 가져와 변수에 저장 
  
  
  
  });
  function getCurrentTime() {
	  const now = new Date();
	  const hours = String(now.getHours()).padStart(2, '0'); // 시간
	  const minutes = String(now.getMinutes()).padStart(2, '0'); // 분
	  const seconds = String(now.getSeconds()).padStart(2, '0'); // 초
	  
	  const currentTime = hours + ':' + minutes + ':' + seconds;
	  return currentTime;
	}
  const currentTime = getCurrentTime();

  function tick() {
    loadingMessage.innerText = "" 
    if (video.readyState === video.HAVE_ENOUGH_DATA) {
      loadingMessage.hidden = true;
      canvasElement.hidden = false;
      outputContainer.hidden = false;

      canvasElement.height = video.videoHeight;
      canvasElement.width = video.videoWidth;
      canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
      var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
      var code = jsQR(imageData.data, imageData.width, imageData.height, {
        inversionAttempts: "dontInvert",
      });
      if (code) {
        drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
        drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
        drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
        drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
         
        qrCodeData = code.data; // 코드에서 데이터를 가져와 변수에 저장 
        console.log(qrCodeData); // 데이터를 콘솔에 출력 
        
       
        
        let empCd = qrCodeData; 
           
        let qrsend = {
      		  "empCd":qrCodeData 
        }  
         
      		 console.log("큐알 데이터 확인:",	qrsend);  
             if(confirm("현재 시간은 " + currentTime + " 입니다.")){
            	 $.ajax({
                     type: 'POST',
                     url: '/attendance/commute',   
                     contentType:"application/json;charset=utf-8",
                     data: JSON.stringify(qrsend), // empCd로 데이터 전송
                     dataType: 'text', 
                     success: function(response) {
                       console.log('QR 코드 데이터를 성공적으로 전송했습니다.');
                       $('#modalCenter').modal('hide'); 
//                        myPopup.close();
                       	location.reload();    
                     },
                     error: function(xhr, status, error) {
                       // 요청 실패 시의 동작
                       console.error('데이터 전송에 실패했습니다.');
                      	alert("실패했습니다 다시 시도해 보세요");
                     }
                   });//end ajax
             }
         
       
      } else {
        outputMessage.hidden = false;
        outputData.parentElement.hidden = true;
      }
    }
    requestAnimationFrame(tick);
    
    
  }
//   qr코드
  disableCamera();    
} 
$('#modalCenter').on('hidden.bs.modal', function () {
    disableCamera();
}); 
//카메라 비활성화 함수
  function disableCamera() {
    var video = document.querySelector("video");

    if (video && video.srcObject) {
        var stream = video.srcObject;
        var tracks = stream.getTracks();

        tracks.forEach(function(track) {
            track.stop();
        });

        video.srcObject = null;
    }
}

</script>  
