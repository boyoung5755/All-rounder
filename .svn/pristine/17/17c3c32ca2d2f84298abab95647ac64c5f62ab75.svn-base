/**
 * <pre>
 * 
 * </pre>
 * @author 작성자명
 * @since 2023. 11. 23.
 * @version 1.0
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일        	수정자       수정내용
 * --------     	--------    ----------------------
 * 2023. 11. 23.     김보영       최초작성 ,이슈등록
 * 2023. 11. 24.     김보영       목록, 칸반보드
 * Copyright (c) 2023 by DDIT All right reserved
 * </pre>
 */ 

// 칸반기능(수정)
let dragged;

/* 드래그 가능한 대상에서 발생하는 이벤트 */
document.addEventListener("drag", (event) => {
  console.log("dragging");
});

document.addEventListener("dragstart", (event) => {
  // 드래그한 요소에 대한 참조 저장
  dragged = event.target;
  // 반투명하게 만들기
  event.target.classList.add("dragging");
  console.log("dragged", dragged);

  const issueNo = dragged.getAttribute("data-issueNo"); // 추가
  console.log("issueNo", issueNo);
  event.dataTransfer.setData("issueNokey", issueNo);

  // issueNokey에 issueNo의 정보를 저장한다.=>보드에서 보드로 이동하면서 값이 바뀌기때문에
  // dataTransfer을 이용해 데이터를 저장한거임!

  let dropzoneElement = document.querySelector('.dropzone');
  console.log("dropzoneElement", dropzoneElement);
  const issueSttus = dropzoneElement.getAttribute('data-issueSttus'); // 추가
  event.dataTransfer.setData("issueSttuskey", issueSttus); // 이하동문
});

document.addEventListener("dragend", (event) => {
  // 투명도 초기화
  event.target.classList.remove("dragging");
});

/* 드롭 대상에서 발생하는 이벤트 */
document.addEventListener("dragover", (event) => {
  event.preventDefault();
});

document.addEventListener("dragenter", (event) => {
  // 드래그 가능한 요소가 대상 위로 오면 강조
  if (event.target.classList.contains("dropzone")) {
    event.target.classList.add("dragover");
  }
});

document.addEventListener("dragleave", (event) => {
  // 드래그 가능한 요소가 대상 밖으로 나가면 강조 제거
  if (event.target.classList.contains("dropzone")) {
    event.target.classList.remove("dragover");
  }
});

let dropElements = document.querySelectorAll(".dropzone");
let bgArray = ['border-primary', 'border-warning', 'border-success'];

dropElements.forEach((el) => {
  el.addEventListener("drop", (event) => {
    event.preventDefault();

    const issueNo = event.dataTransfer.getData("issueNokey");
    const issueSttus = event.target.dataset.issueSttus;
    var proSn = $('#proSn').val();
    console.log(issueNo, issueSttus, proSn);

    // Check if the issue is in the correct dropzone
    if (event.target.classList.contains("dropzone")) {

      // Check if the issue status is different
      if (issueSttus !== dragged.getAttribute("data-issueSttus")) {
        // AJAX request
        $.ajax({
          type: "PUT",
          url: "/issue/" + proSn + "/update",
          contentType: "application/json",
          dataType: "json",
          data: JSON.stringify({ issueNo: issueNo, issueSttus: issueSttus }),
          success: function (data) {
            if (data.result === "OK") {
              console.log("성공");
              dragged.parentNode.removeChild(dragged);
              event.target.appendChild(dragged);

              bgArray.forEach((b) => {
                dragged.classList.remove(b);
              });

              dragged.classList.add(event.target.dataset.addBg);
              Swal.fire("변경되었습니다.", "", "success");
            }
          },
          error: function (xhr) {
            console.log("실패");
            Swal.fire({
              icon: "error",
              title: "처리 중 오류가 발생했습니다.",
            });
          },
        });
      }
    }
  });
});






//----------------------------------------------------------------------------
//일반인지 결함인지 버튼클릭이벤트
function fn_issueSe(issueSe){
		
	document.getElementById("issueSe").value = issueSe;
		
	var elements = document.querySelectorAll('.btn-issueSe');
	elements.forEach(function(element) {
		element.classList.remove('active');
	});
	    
	    //제이쿼리 사용법
// 	    $(".btn-jobStcd").each(function(i, ele){
// 	    $.each(".btn-jobStcd", function(i, ele){
// 	    	$(ele).removeClass("active");
// 	    })
	    
	$(".btn-issueSe").eq(issueSe-1).addClass("active");
	//$("#jobStcd").val(jobStcd);
}



//이슈등록 비동기

function fn_issueInsert(){
	
	fn_swalConfirm("이슈를 등록하시겠습니까?", function(){
		//비동기
		var data = new FormData($("#issueInsertForm")[0]);
		var proSn = $('#proSn').val();
	
		$.ajax({
			type: "POST",
			enctype: 'multipart/form-data',
			url: "/issue/"+proSn+"/insert",
			data: data,
			processData: false,
			contentType: false,
			cache: false,
			success: function (data) {
				var text;
				var icon;
				if (data.success == "Y") {
					text = "이슈 등록이 완료되었습니다.";
					icon = "success";
				} else {
					text = "이슈 등록이 실패되었습니다.";
					icon = "warning";
				}
				//모달창열기
				fn_swalComplete(text, icon, "/issue/"+proSn+"/home", data.success);
			},
			error: function () {
				fn_swalError();
			}
		});
	});
	
}


//이슈 목록 조회

$(function () {

	fn_inProgressIssue();
	fn_onHoldIssue();
	fn_completedIssue();

});

//진행 이슈 조회
function fn_inProgressIssue(){
	
	var proSn = $('#proSn').val();
	var issueSttus = '1'; 
	
	let settings ={
		url : '/issue/'+ proSn +'/'+issueSttus+'/list' ,
		contentType: 'application/json',
		method: "get",
		dataType: "json"
	};
	
	let tag ="";
	
	$.ajax(settings)
		.done(function (resp){
		
			let issueList = resp.issueList ;
			if(issueList[0] != null){
				$.each(issueList , function(i,v){
					if(v.issueNo != null){
						tag +=`
							<div data-issueNo="${v.issueNo}" draggable="true" class="draggable card shadow-none border border-primary mb-3" >
								<div class="card-body">
						`;
						
						if (v.issueImp == 1) {
							tag += `<span class="text-danger"><i class='bx bx-dizzy'></i>높음</span>`;
						} else if (v.issueImp == 2) {
							tag += `<span class="text-primary"><i class='bx bx-smile'></i>중간</span> `;
						} else if (v.issueImp == 3) {
							tag += `<span class="text-success"><i class='bx bx-laugh'></i>낮음</span>`;
						}
						
						tag +=`		
									<h5 class="card-title">${v.issueSj}</h5>
									<p class="card-text">${v.issueCn}</p>
								</div>
							</div>
						`;	
					}else{
						tag +=`
							<div class="card shadow-none bg-transparent border border-primary mb-3">
								<div class="card-body">
									<h5 class="card-title">없음</h5>
									<p class="card-text">진행 이슈가 존재하지 않습니다.</p>
								</div>
							</div>
						`; 
					}
					$('#inProgressIssue').html(tag);
				});
			}
		});
}


//보류 이슈 조회
function fn_onHoldIssue(){
	
	var proSn = $('#proSn').val();
	var issueSttus = '2'; 
	
	let settings ={
		url : '/issue/'+ proSn +'/'+issueSttus+'/list' ,
		contentType: 'application/json',
		method: "get",
		dataType: "json"
	};
	
	let tag ="";
	
	$.ajax(settings)
		.done(function (resp){
		
			let issueList = resp.issueList ;
			if(issueList[0] != null){
				$.each(issueList , function(i,v){
					if(v.issueNo != null){
						tag +=`
							<div data-issueNo="${v.issueNo}" draggable="true" class="draggable card shadow-none  border border-warning mb-3">
								<div class="card-body">
								
						`;
						
						if (v.issueImp == 1) {
							tag += `<span class="text-danger"><i class='bx bx-dizzy'></i>높음</span>`;
						} else if (v.issueImp == 2) {
							tag += `<span class="text-primary"><i class='bx bx-smile'></i>중간</span> `;
						} else if (v.issueImp == 3) {
							tag += `<span class="text-success"><i class='bx bx-laugh'></i>낮음</span>`;
						}
						
						tag +=`			
									<h5 class="card-title">${v.issueSj}</h5>
									<p class="card-text">${v.issueCn}</p>
								</div>
							</div>
						`;	
					}else{
						tag +=`
							<div class="card shadow-none bg-transparent border border-warning mb-3">
								<div class="card-body">
									<h5 class="card-title">없음</h5>
									<p class="card-text">보류 이슈가 존재하지 않습니다.</p>
								</div>
							</div>
						`;
					}
					$('#onHoldIssue').html(tag);
				});
			}
		});
}



//완료 이슈 조회
function fn_completedIssue(){
	
	var proSn = $('#proSn').val();
	var issueSttus = '3'; 
	
	let settings ={
		url : '/issue/'+ proSn +'/'+issueSttus+'/list' ,
		contentType: 'application/json',
		method: "get",
		dataType: "json"
	};
	
	let tag ="";
	
	$.ajax(settings)
		.done(function (resp){
		
			let issueList = resp.issueList ;
			if(issueList[0] != null){
				$.each(issueList , function(i,v){
					if(v.issueNo != null){
						tag +=`
							<div data-issueNo="${v.issueNo}" draggable="true" class="draggable card shadow-none  border border-success mb-3">
								<div class="card-body">
						`;
						
						if (v.issueImp == 1) {
							tag += `<span class="text-danger"><i class='bx bx-dizzy'></i>높음</span>`;
						} else if (v.issueImp == 2) {
							tag += `<span class="text-primary"><i class='bx bx-smile'></i>중간</span> `;
						} else if (v.issueImp == 3) {
							tag += `<span class="text-success"><i class='bx bx-laugh'></i>낮음</span>`;
						}
						
						tag +=`			
									<h5 class="card-title">${v.issueSj}</h5>
									<p class="card-text">${v.issueCn}</p>
								</div>
							</div>
						`;	
					}else{
						tag +=`
							<div class="card shadow-none bg-transparent border border-success mb-3">
								<div class="card-body">
									<h5 class="card-title">없음</h5>
									<p class="card-text">완료 이슈가 존재하지 않습니다.</p>
								</div>
							</div>
						`;
					}
					$('#completedIssue').html(tag);
				});
			}
		});
};

