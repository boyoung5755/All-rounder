package kr.or.ddit.groupware.board.freeboard.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.groupware.board.freeboard.service.FreeBoardService;
import kr.or.ddit.vo.PaginationInfo;
import kr.or.ddit.vo.SearchVO;
import kr.or.ddit.vo.groupware.AnswerVO;
import kr.or.ddit.vo.groupware.BoardVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
//@CrossOrigin(origins = {"http://localhost:80"})
@RequestMapping("/free")
public class FreeBoardController {

	@Inject
	private FreeBoardService service;
	
	@GetMapping
	public String freeBoard() {
		return "groupware/board/freeboard/freeboard";
	}
	
	@GetMapping("/list")
	@ResponseBody
	public Map<String, PaginationInfo<BoardVO>> freeList(BoardVO bVO,
			@ModelAttribute("simpleCondition") SearchVO simpleCondition,
			@RequestParam(value = "page", required = false, defaultValue = "1") int currentPage) throws Exception {
		
		Map<String, PaginationInfo<BoardVO>> map = new HashMap<String, PaginationInfo<BoardVO>>();
		log.info("bVO.스탯확인", bVO.getEventSttus());

		PaginationInfo<BoardVO> paging = new PaginationInfo<BoardVO>(7, 3);
		paging.setDetailCondition(bVO);
		paging.setSimpleCondition(simpleCondition);

		paging.setCurrentPage(currentPage);

		List<BoardVO> eventList = service.selectFreeBoardList(paging);
		paging.setDataList(eventList);

		map.put("paging", paging);
		log.info("이벤트페이징성공");

		return map;
		// groupware/board/freeboard/freeboard
		// groupware/board/freeboard/freeboarddetail		
	}
	
	@PostMapping("{bbsNo}")
	@ResponseBody
	public BoardVO  selectFreeBoard(@PathVariable("bbsNo") int bbsNO) {	
		log.info("***************** {}",bbsNO);
		return service.selectFreeBoard(bbsNO);
	}
	
	@PostMapping("/answerInsert")
	@ResponseBody
	public void answerInsert(@RequestBody AnswerVO answerVO) {
		service.answerInsert(answerVO);
	}
	
	@PostMapping("/replyInsert")
	@ResponseBody
	public void replyInsert(@RequestBody AnswerVO answerVO) {
		service.replyInsert(answerVO);
	}
	
	@DeleteMapping("/answerDelete")
	@ResponseBody
	public void answerDelete(@RequestBody AnswerVO answerVO) {
		log.info("$$$$$$$$$$$$$$$ {}", answerVO);
		service.answerDelete(answerVO);
	}
	
	@PutMapping("/answerUpdate")
	@ResponseBody
	public String answerUpdate(@RequestBody AnswerVO answerVO) {
		log.info("********{}",answerVO);
		service.answerUpdate(answerVO);
		return "jsonView";
	}
}
