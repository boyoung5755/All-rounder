<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- [[개정이력(Modification Information)]] -->
<!-- 수정일 수정자 수정내용 -->
<!-- ========== ====== ============== -->
<!-- 2023. 11. 13. 박민주 최초작성 -->
<!-- 2023. 11. 14. 박민주 insert 쿼리 추가 -->
<!-- 2023. 11. 15. 박민주 list 조회 쿼리 추가 -->
<!-- Copyright (c) 2023 by DDIT All right reserved -->


<mapper namespace="kr.or.ddit.groupware.mailing.dao.MailDAO">

	<resultMap type="MailVO" id="mailMap" autoMapping="true">
		<id property="mailCd" column="MAIL_CD"></id>
		<association property="senderVO" javaType="EmployeeVO"
			autoMapping="true">
			<id property="empCd" column="EMP_CD" />
			<association property="common" autoMapping="true" />
			<association property="dept" autoMapping="true" />
		</association>
		<collection property="mailReceiverList"
			ofType="MailReceptionVO" autoMapping="true">
			<id property="mrReceiver" column="MR_RECEIVER"></id>
		</collection>
		<collection property="attachments" ofType="MailAttachVO" autoMapping="true"/>
	</resultMap>

	<!-- 받은 메일함 페이징을 위한 총 레코드수 조회 -->
	<select id="selectReceivedTotalRecord" resultType="int"
		parameterType="String">
		SELECT
			COUNT(*)
		FROM
			MAIL_RECEPTION
		WHERE
			MR_RECEIVER=#{mrReceiver}
	</select>

	<!-- 받은 메일 목록 조회 -->
	<select id="selectReceptionMail" resultMap="mailMap"
		parameterType="PaginationInfo">
		SELECT A.* , E.EMP_CD
			FROM (
		SELECT
			ROWNUM RNUM
			,R.MR_RECEIVER
			,R.MR_IMPO_YN
			,R.MAIL_DELETE_FLAG
			,R.MR_READ_YN
			,R.MAIL_CD
			,M.MAIL_SJ
			,M.MAIL_CN
			,M.MAIL_TRNSMIS_DT
			,M.MAIL_SENDER
			,E.EMP_NAME
			,E.EMP_RANK
			,E.DEPT_CD
			,E.EMP_MAIL
			,E.EMP_POSITION
			,E.EMP_EMAIL_SECOND
			,C.COMMON_CODE_SJ
			,D.DEPT_NAME
		FROM
			MAIL_RECEPTION R
		INNER JOIN MAIL_TB M
			ON M.MAIL_CD = R.MAIL_CD
		INNER JOIN EMPLOYEE E ON E.EMP_CD =
			M.MAIL_SENDER
		INNER JOIN COMMON_CODE C ON E.EMP_RANK = C.COMMON_CODE_CD
		INNER JOIN DEPT D ON E.DEPT_CD = D.DEPT_CD
			WHERE MR_RECEIVER LIKE '%'
			|| #{detailCondition.mailSender} || '%' AND
			R.MAIL_DELETE_FLAG = '0'
			order by M.MAIL_TRNSMIS_DT desc
			) A
			INNER JOIN EMPLOYEE E ON E.EMP_CD =
			A.MAIL_SENDER
			WHERE RNUM BETWEEN
			#{startRow} AND #{endRow}
	</select>

	<!-- 보낸 메일함 페이징을 위한 총 레코드수 조회 -->
	<select id="selectSentTotalRecord" resultType="int"
		parameterType="String">
		SELECT
			COUNT(*)
		FROM
			MAIL_TB
		WHERE
			MAIL_SENDER=#{mrSender}
	</select>

	<!-- 보낸 메일 목록 조회 리스트 -->
	<select id="selectSentMailList" resultMap="mailMap"
		parameterType="PaginationInfo">
		SELECT A.* , E.EMP_CD
		FROM (
			SELECT
				ROWNUM RNUM,
				M.MAIL_CD,
				M.MAIL_SJ,
				M.MAIL_CN,
				M.MAIL_TRNSMIS_DT,
				M.MAIL_SENDER,
				M.MAIL_SAVE_YN,
				M.MAIL_DELETE_FLAG,
				M.MR_IMPO_YN,
				E.EMP_NAME,
				E.EMP_RANK,
				E.DEPT_CD,
				E.EMP_MAIL,
				E.EMP_POSITION,
				E.EMP_EMAIL_SECOND,
				C.COMMON_CODE_SJ,
				D.DEPT_NAME
			FROM
			MAIL_TB M
				INNER JOIN EMPLOYEE E ON M.MAIL_SENDER = E.EMP_CD
				INNER JOIN COMMON_CODE C ON E.EMP_RANK=C.COMMON_CODE_CD
				INNER JOIN DEPT D ON E.DEPT_CD=D.DEPT_CD
			WHERE M.MAIL_SENDER =
			#{detailCondition.mailSender}
			order by M.MAIL_TRNSMIS_DT desc
			) A
		INNER JOIN EMPLOYEE E ON E.EMP_CD = A.MAIL_SENDER
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

	<insert id="insertMailTb" parameterType="MailVO"
		useGeneratedKeys="true" keyProperty="mailCd">
		INSERT INTO
			MAIL_TB (
			MAIL_CD,
			MAIL_SJ,
			MAIL_CN,
			MAIL_TRNSMIS_DT,
			MAIL_SENDER,
			MAIL_SAVE_YN,
			MAIL_DELETE_FLAG,
			MR_IMPO_YN
		) VALUES (
			TO_CHAR(SYSDATE,'YYMMDD')||TO_CHAR(MAIL_SEQ.NEXTVAL,'FM0000'),
			#{mailSj,jdbcType=VARCHAR},
			#{mailCn,jdbcType=CLOB},
			(SELECT
				TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') FROM DUAL),
				#{mailSender,jdbcType=VARCHAR},
				'N',
				'0',
				'N'
			)
	</insert>

	<insert id="insertMailReception" parameterType="MailReceptionVO">

		<selectKey keyProperty="mailCd" resultType="String"
			order="BEFORE">
			SELECT 
				TO_CHAR(SYSDATE,'YYMMDD')||TO_CHAR(MAIL_SEQ.CURRVAL,'FM0000') AS MAIL_CD 
			FROM
				DUAL
		</selectKey>
		INSERT INTO MAIL_RECEPTION (
			MR_RECEIVER,
			MAIL_CD,
			MR_IMPO_YN,
			MAIL_DELETE_FLAG,
			MR_READ_YN
		) VALUES (
			#{mrReceiver,jdbcType=VARCHAR},
			#{mailCd,jdbcType=VARCHAR},
			'N',
			'0',
			'N'
			)
	</insert>

	<select id="selectMailAttach" parameterType="String" resultType="MailAttachVO">
		SELECT
		    MAIL_CD,
		    MAIL_ATTACH_NO,
		    MAIL_ATTACH_NAME,
		    MAIL_ATTACH_SAVENAME,
		    MAIL_ATTACH_MIME,
		    MAIL_ATTACH_SIZE,
		    MAIL_ATTACH_FANCYSIZE
		FROM
		    MAIL_ATTACH
		WHERE 
		    MAIL_ATTACH_NO=#{mailAttchNo}
	</select>

	<insert id="insertMailAttach" parameterType="MailAttachVO">
		<selectKey keyProperty="mailCd" resultType="String"
			order="BEFORE">
			SELECT
					TO_CHAR(SYSDATE,'YYMMDD')||TO_CHAR(MAIL_SEQ.CURRVAL,'FM0000') AS MAIL_CD
			FROM
				DUAL
		</selectKey>
		INSERT INTO mail_attach (
			mail_cd,
			mail_attach_no,
			mail_attach_name,
			mail_attach_savename,
			mail_attach_mime,
			mail_attach_size,
			mail_attach_fancysize
		) VALUES (
			#{mailCd,jdbcType=VARCHAR}
			,#{mailCd}||TO_CHAR(MAILATTACH_SEQ.NEXTVAL,'FM000')
			,#{mailAttachName,jdbcType=VARCHAR}
			,#{mailAttachSavename,jdbcType=VARCHAR}
			,#{mailAttachMime,jdbcType=VARCHAR}
			, #{mailAttachSize,jdbcType=NUMERIC}
			, #{mailAttachFancysize,jdbcType=VARCHAR}
		)
	</insert>

	<select id="selectMailDetail" parameterType="String"
		resultMap="mailMap">
	SELECT
			M.MAIL_CD,
			M.MAIL_SJ,
			M.MAIL_CN,
			M.MAIL_TRNSMIS_DT,
			M.MAIL_SENDER,
			M.MAIL_SAVE_YN,
			M.MAIL_DELETE_FLAG,
			M.MR_IMPO_YN,
			E.EMP_CD ,
			E.EMP_NAME ,
            E.EMP_RANK,
			E.DEPT_CD ,
			E.EMP_MAIL ,
			E.EMP_PROFILE_IMG ,
			E.EMP_EXTENSION ,
			E.EMP_POSITION ,
			E.EMP_EMAIL_SECOND,
            D.DEPT_NAME,
            CC.COMMON_CODE_SJ,
            A.MAIL_CD,
            A.MAIL_ATTACH_NO,
            A.MAIL_ATTACH_NAME,
            A.MAIL_ATTACH_SAVENAME,
            A.MAIL_ATTACH_MIME,
            A.MAIL_ATTACH_SIZE,
            A.MAIL_ATTACH_FANCYSIZE
		FROM
			MAIL_TB M
				INNER JOIN EMPLOYEE E ON M.MAIL_SENDER = E.EMP_CD
		        INNER JOIN DEPT D ON E.DEPT_CD=D.DEPT_CD
		        INNER JOIN COMMON_CODE CC ON CC.COMMON_CODE_CD=E.EMP_RANK
		        INNER JOIN MAIL_ATTACH A ON A.MAIL_CD=M.MAIL_CD
		WHERE
			M.MAIL_CD=#{mailCd}
	</select>
	
	<select id="simpleSelectReceptionMail" resultType="MailReceptionVO" parameterType="hashmap">
	  SELECT 
			MR_RECEIVER
			,MAIL_CD
			,MR_IMPO_YN
			,MAIL_DELETE_FLAG
			,MR_READ_YN
	  FROM
	  		MAIL_RECEPTION
	  WHERE
	  		MAIL_CD=#{mailCd} AND MR_RECEIVER=#{mrReceiver}
	</select>
	
	<select id="simpleSelectSentMail" resultType="MailVO" parameterType="String">
		SELECT
		    MAIL_CD,
		    MAIL_SJ,
		    MAIL_CN,
		    MAIL_TRNSMIS_DT,
		    MAIL_SENDER,
		    MAIL_SAVE_YN,
		    MAIL_DELETE_FLAG,
		    MR_IMPO_YN
		FROM
		    MAIL_TB
		WHERE
		    MAIL_CD=#{mailCd}
	</select>
	
	<!-- 받은 메일 중요메일표시 업데이트 -->
	<update id="updateReceivedMailImportant" parameterType="hashmap">
		UPDATE 
			mail_reception
		SET
			MR_IMPO_YN = #{mrImpoYn,jdbcType=VARCHAR}
		WHERE
			MAIL_CD=#{mailCd}
	</update>
	
	<update id="updateSendMailImportant" parameterType="hashmap">
		UPDATE
			 mail_tb
		SET
			MAIL_SJ=#{mailSj,jdbcType=VARCHAR}
			,MAIL_CN=#{mailCn,jdbcType=CLOB}
			,MAIL_TRNSMIS_DT=#{mailTrnsmisDt,jdbcType=VARCHAR}
			,MAIL_SAVE_YN=#{mailSaveYn,jdbcType=VARCHAR}
			,MAIL_DELETE_FLAG=#{mailDeleteFlag,jdbcType=VARCHAR}
			,MR_IMPO_YN=#{mrImpoYn,jdbcType=VARCHAR}
		WHERE
		      mail_cd = #{mailCd}
	</update>
	
</mapper>